/**
 * Representation of a Problem response as defined by RFC-7807.
 */
export interface Problem {
  /** A URI reference [RFC3986] that identifies the problem type. */
  readonly type: string;

  /** A short, human-readable summary of the problem type. */
  readonly title?: string;

  /** The HTTP status code generated by the origin server for this occurrence of the problem. */
  readonly status: number;

  /** A human-readable explanation specific to this occurrence of the problem. */
  readonly detail?: string;

  /** A URI reference that identifies the specific occurrence of the problem. */
  readonly instance?: string;

  /** Any extra fields that were present in the problem response. */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  readonly extra: Record<string, any>;
}

// Error to throw if an API response was an RFC-7807 Problem.
export class ProblemError extends Error {
  // The problem
  readonly problem: Problem;

  constructor(problem: Problem) {
    super(problem.title ?? problem.type);

    this.problem = problem;
    this.name = 'ProblemError';
    Object.setPrototypeOf(this, new.target.prototype);
  }
}
